// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String                    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?                   @unique
  emailVerified DateTime?
  last_online   DateTime?
  avatar        String?
  password      String
  role          String?                   @default("user")
  username      String?                   @unique
  messages      Message[]
  conversations ConversationParticipant[]
  sessions      Session[]
  createdAt     DateTime                  @default(now())
  updatedAt     DateTime                  @updatedAt
}

model Conversation {
  id              String                    @id @default(auto()) @map("_id") @db.ObjectId
  participants    ConversationParticipant[]
  messages        Message[]                 @relation("conversationMessages")
  latestMessage   Message?                  @relation(name: "latestConversationMessage", fields: [latestMessageId], references: [id], onUpdate: NoAction, onDelete: NoAction)
  latestMessageId String?                   @unique @db.ObjectId
  createdAt       DateTime                  @default(now())
  updatedAt       DateTime                  @updatedAt
}

model ConversationParticipant {
  id                   String       @id @default(auto()) @map("_id") @db.ObjectId
  user                 User         @relation(fields: [userId], references: [id])
  userId               String       @db.ObjectId
  conversation         Conversation @relation(fields: [conversationId], references: [id])
  conversationId       String       @db.ObjectId
  hasSeenLatestMessage Boolean
}

model Message {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  conversation   Conversation  @relation(name: "conversationMessages", fields: [conversationId], references: [id])
  conversationId String        @db.ObjectId
  isLatestIn     Conversation? @relation("latestConversationMessage")
  sender         User          @relation(fields: [senderId], references: [id])
  senderId       String        @db.ObjectId
  body           String
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}
